#!/usr/bin/env python



import matplotlib
import matplotlib.pyplot as plt
import h5py
import numpy
import os, sys, inspect

#show_rN = True
show_rN = False

#makePDF = True
makePDF = False
for arg in sys.argv:
   if arg.lower()=='pdf':
      makePDF = True

if makePDF:
   matplotlib.use('PDF')

print "This is "+ inspect.getfile(inspect.currentframe())

quantityToPlot = "Phi1Hat"

filename = 'sfincsOutput.h5'

FigSize = (9,5)

font = {'size':15}
matplotlib.rc('font', **font)
matplotlib.rc('lines',markeredgewidth=0,markersize=3,linewidth=2.5)
matplotlib.rc('axes',linewidth=1.5)

zFactor = 1000 ##kV -> V
xAxisMax = r'$2\pi/5$'
yAxisMax = r'$2\pi$'

fig = plt.figure(figsize=FigSize)
fig.patch.set_facecolor('white')
numRows = 1
numCols = 1
iteration = 0
numContours = 20

#for i in range(6):
print "Processing file ",filename
f = h5py.File(filename,'r')
theta = f["theta"][()]
zeta = f["zeta"][()]
Phi1Hat = f[quantityToPlot][()]
rN = f["rN"][()]
f.close()
    
plt.subplot(numRows,numCols,1)
    #plt.contourf(zeta,theta,1000*numpy.fliplr(Phi1Hat[:,:,iteration].transpose()),numContours)
plt.contourf(zeta,theta,zFactor*Phi1Hat[:,:,iteration].transpose(),numContours)
plt.xlabel(r'$\zeta$')
plt.ylabel(r'$\theta$')
plt.xticks([0,max(zeta)])
plt.yticks([0,max(theta)])
plt.gca().axes.xaxis.set_ticklabels([r'0',xAxisMax])
plt.gca().axes.yaxis.set_ticklabels([r'0',yAxisMax])
plt.gca().axes.xaxis.set_label_coords(0.5,-0.03)
plt.gca().axes.yaxis.set_label_coords(-0.03,0.5)
if show_rN:
    plt.title('rN = '+str(rN))
plt.colorbar()
plt.subplots_adjust(wspace=0.27)

print Phi1Hat.shape

if makePDF:
    print "Saving PDF"

    if len(sys.argv)>2 : #Use the substituted name as file name
       print "Writing plot to " + os.getcwd() + "/" + sys.argv[2] + ".pdf."
       plt.savefig(sys.argv[2] + ".pdf", orientation = 'landscape', papertype='letter')
    else :
       head, tail = os.path.split(inspect.getfile(inspect.currentframe()))
       print "Writing plot to " + os.getcwd() + "/" + tail + ".pdf."
       plt.savefig(tail+'.pdf', orientation = 'landscape', papertype='letter')
else:
    plt.show()
